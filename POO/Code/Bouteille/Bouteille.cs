///////////////////////////////////////////////////////////
//  Bouteille.cs
//  Implementation of the Class Bouteille
//  Generated by Enterprise Architect
//  Created on:      11-f�vr.-2025 11:29:03
//  Original author: FGessa
///////////////////////////////////////////////////////////


namespace Bouteille {

	public class Bouteille {

		private float _contenanceEnLitre;
		private float _contenuEnLitre;
		private bool _estOuverte;

		public float ContenanceEnLitre {
			get {
				return _contenanceEnLitre;
			}
			set {
				if (value <= 0)
				{
					throw new Exception("La valeur de la contenance doit être supérieure à 0!");
				}
				_contenanceEnLitre = value ;
			}
		}
		public float ContenuEnLitre {
			get {
				return _contenuEnLitre;
			}
			set {
                if (value <= 0)
                {
					throw new Exception("La valeur du contenu doit être supérieure à 0!");

                }
                _contenuEnLitre = value;
			}
		}
		public bool EstOuverte {
			get {
				return _estOuverte;
			}
			set {
				_estOuverte = value;
			}
		}

		public Bouteille() 
			:this(1, 1, false) {}

		/// 
		/// <param name="_contenanceEnLitre"></param>
		/// <param name="_contenuEnLitre"></param>
		/// <param name="_estOuverte"></param>
		public Bouteille(float _contenanceEnLitre, float _contenuEnLitre, bool _estOuverte) {
			ContenanceEnLitre = _contenanceEnLitre;
			ContenuEnLitre = _contenuEnLitre;
			EstOuverte = _estOuverte;
		}

        /// 
        /// <param name="_bouteilleACopier"></param>
        public Bouteille(Bouteille _bouteilleACopier) 
			:this(_bouteilleACopier._contenanceEnLitre, _bouteilleACopier._contenuEnLitre, _bouteilleACopier._estOuverte) {}

		public bool Fermer() {
            return _estOuverte = false;
		}

		public bool Ouvrir() {
			return _estOuverte = true;
		}

		public bool Remplir()
		{
            VerifierBouteilleOuverte();

            ContenuEnLitre = ContenanceEnLitre;

			return true;
		}

		/// 
		/// <param name="_quantite"></param>
		public bool Remplir(float _quantite) {

            bool ret = false;

            VerifierQuantite(_quantite);
            VerifierBouteilleOuverte();

			if (ContenuEnLitre + _quantite < ContenanceEnLitre)
			{
				ContenuEnLitre += _quantite;

				ret = true;
			}
			else
			{
				throw new Exception("La quantité est trop importante!");
			}
			return ret;
		}

        public bool Vider()
        {
            VerifierBouteilleOuverte();

            ContenuEnLitre = 0;

            return true;
        }

        /// 
        /// <param name="_quantite"></param>
        public bool Vider(float _quantite) {

			bool ret = false;

            VerifierQuantite(_quantite);
			VerifierBouteilleOuverte();

			if (ContenuEnLitre - _quantite >= 0)
			{
				ContenuEnLitre -= _quantite;

				ret = true;
            }
            else
            {
                throw new Exception("La quantité est trop importante!");
            }
            return ret;
        }

        private static void VerifierQuantite(float _quantite)
        {
			if (_quantite <= 0)
			{
				throw new Exception("La quantité doit être supérieure à 0!");
			}
        }

		private void VerifierBouteilleOuverte()
		{
			if (!EstOuverte)
			{
				throw new Exception("Vous devez d'abord ouvrir la bouteille!");
			}
		}

    }//end Bouteille
}